{"version":3,"sources":["./src/app/newcities/newcities-routing.module.ts","./src/app/newcities/newcities.component.html","./src/app/newcities/newcities.component.ts","./src/app/newcities/newcities.module.ts"],"names":[],"mappings":"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","file":"newcities-newcities-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewcitiesComponent } from './newcities.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewcitiesComponent,\n    data: {\n      breadcrumb: 'New City'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewcitiesRoutingModule { }\n","<ngx-spinner type=\"ball-pulse-sync\" color=\"#e74c3c\">\n    <p style=\"font-size: 20px; color: #e74c3c\">Please wait...</p>\n</ngx-spinner>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5>Add City </h5>\n            </div>\n            <div class=\"card-body reset-table p-t-0\">\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <label>Address</label>\n                        <input type=\"text\" [(ngModel)]=\"address\" ngx-google-places-autocomplete #placesRef=\"ngx-places\"\n                            [options]=\"{\n    types: ['(cities)']\n    }\" (onAddressChange)=\"handleAddressChange($event)\" class=\"form-control\" placeholder=\"Address\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n\n                    <div class=\"col-sm-12\">\n                        <button class=\"btn btn-danger btn-round\" (click)=\"create()\">Add City</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n<ng2-toasty></ng2-toasty>","import { Component, OnInit } from '@angular/core';\nimport { Address } from 'ngx-google-places-autocomplete/objects/address';\nimport { ApisService } from '../services/apis.service';\nimport { ToastyService, ToastData, ToastOptions } from 'ng2-toasty';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-newcities',\n  templateUrl: './newcities.component.html',\n  styleUrls: ['./newcities.component.css']\n})\nexport class NewcitiesComponent implements OnInit {\n  city: any;\n  country: any;\n  lat: any;\n  lng: any;\n  address: any;\n  constructor(\n    private api: ApisService,\n    private toastyService: ToastyService,\n    private spinner: NgxSpinnerService,\n    private navCtrl: Location\n  ) { }\n\n  ngOnInit() {\n  }\n  public handleAddressChange(address: Address) {\n    console.log(address);\n    this.city = address.name;\n    this.country = address.address_components[address.address_components.length - 1].short_name;\n    this.lat = address.geometry.location.lat();\n    this.lng = address.geometry.location.lng();\n    console.log('=>', this.country);\n  }\n\n  error(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Error'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.error(toastOptions);\n  }\n  success(message) {\n    const toastOptions: ToastOptions = {\n      title: this.api.translate('Success'),\n      msg: message,\n      showClose: true,\n      timeout: 2000,\n      theme: 'default',\n      onAdd: (toast: ToastData) => {\n        console.log('Toast ' + toast.id + ' has been added!');\n      },\n      onRemove: function (toast: ToastData) {\n        console.log('Toast ' + toast.id + ' has been removed!');\n      }\n    };\n    // Add see all possible types in one shot\n    this.toastyService.success(toastOptions);\n  }\n\n  create() {\n\n    if (!this.city || this.city === '' || !this.lat || !this.lng) {\n      this.error(this.api.translate('Please select valid city name'));\n      return false;\n    }\n    const id = Math.floor(100000000 + Math.random() * 900000000);\n    const param = {\n      name: this.city,\n      country: this.country,\n      status: 'active',\n      id: id.toString(),\n      lat: this.lat,\n      lng: this.lng\n    };\n    console.log('ok', param, id.toString());\n    this.spinner.show();\n    this.api.addCity(id.toString(), param).then(data => {\n      this.spinner.hide();\n      console.log(data);\n      this.api.alerts(this.api.translate('Success'), this.api.translate('City Added'), 'success');\n      this.navCtrl.back();\n    }).catch(error => {\n      this.spinner.hide();\n      console.log(error);\n      this.error(this.api.translate('Something went wrong'));\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NewcitiesRoutingModule } from './newcities-routing.module';\nimport { NewcitiesComponent } from './newcities.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\n\n\n@NgModule({\n  declarations: [NewcitiesComponent],\n  imports: [\n    CommonModule,\n    NewcitiesRoutingModule,\n    SharedModule,\n    NgxSpinnerModule,\n    GooglePlaceModule,\n  ]\n})\nexport class NewcitiesModule { }\n"],"sourceRoot":"webpack:///"}